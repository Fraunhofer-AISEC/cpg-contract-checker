{
    "mismatched input 'should' expecting {';', NL}": [
        "ERROR: when parsing line 2 column 9: mismatched input 'should' expecting {';', NL}\n"
    ],
    "mismatched input 'error' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 2 column 23: mismatched input 'error' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'non' expecting {'(', NL}": [
        "ERROR: when parsing line 2 column 33: mismatched input 'non' expecting {'(', NL}\n"
    ],
    "mismatched input 'memeber' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 2 column 49: mismatched input 'memeber' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'while' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 25: mismatched input 'while' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'processing' expecting {'(', NL}": [
        "ERROR: when parsing line 3 column 31: mismatched input 'processing' expecting {'(', NL}\n"
    ],
    "mismatched input ':' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 53: mismatched input ':' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'reason' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 69: mismatched input 'reason' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'at' expecting {';', NL}": [
        "ERROR: when parsing line 4 column 4: mismatched input 'at' expecting {';', NL}\n"
    ],
    "mismatched input '.' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 4 column 18: mismatched input '.' expecting {'=', ';', NL}\n"
    ],
    "mismatched input '(' expecting {';', NL}": [
        "ERROR: when parsing line 4 column 40: mismatched input '(' expecting {';', NL}\n"
    ],
    "no viable alternative at input 'nft_erc721.sol:'": [
        "ERROR: when parsing line 4 column 65: no viable alternative at input 'nft_erc721.sol:'\n"
    ],
    "extraneous input ')' expecting {';', NL}": [
        "ERROR: when parsing line 4 column 70: extraneous input ')' expecting {';', NL}\n"
    ]
}