{
    "extraneous input '.' expecting {<EOF>, '~', 'from', '{', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 3 column 39: extraneous input '.' expecting {<EOF>, '~', 'from', '{', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input 'have' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 54: mismatched input 'have' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'the' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 69: mismatched input 'the' expecting {'=', ';', NL}\n"
    ],
    "mismatched input '<EOF>' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 4 column 0: mismatched input '<EOF>' expecting {'=', ';', NL}\n"
    ]
}