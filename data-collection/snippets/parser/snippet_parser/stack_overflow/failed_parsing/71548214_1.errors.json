{
    "mismatched input 'import' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 1 column 13: mismatched input 'import' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'def' expecting {'as', 'from'}": [
        "ERROR: when parsing line 2 column 0: mismatched input 'def' expecting {'as', 'from'}\n"
    ],
    "extraneous input ':' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 2 column 17: extraneous input ':' expecting {'=', ';', NL}\n"
    ],
    "extraneous input 'if' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 3 column 4: extraneous input 'if' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input 'not' expecting {';', NL}": [
        "ERROR: when parsing line 3 column 29: mismatched input 'not' expecting {';', NL}\n"
    ]
}