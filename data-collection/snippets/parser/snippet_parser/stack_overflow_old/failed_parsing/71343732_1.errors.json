{
    "mismatched input '(' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 1 column 20: mismatched input '(' expecting {'=', ';', NL}\n"
    ],
    "extraneous input ':' expecting {';', NL}": [
        "ERROR: when parsing line 1 column 22: extraneous input ':' expecting {';', NL}\n"
    ],
    "extraneous input 'method' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 5 column 25: extraneous input 'method' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'MetaMask' expecting {';', NL}": [
        "ERROR: when parsing line 8 column 66: mismatched input 'MetaMask' expecting {';', NL}\n"
    ],
    "extraneous input 'Account' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 8 column 81: extraneous input 'Account' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'contract' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}": [
        "ERROR: when parsing line 10 column 21: mismatched input 'contract' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}\n",
        "ERROR: when parsing line 23 column 25: mismatched input 'contract' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}\n"
    ],
    "extraneous input '.' expecting {'from', 'error', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier, NL}": [
        "ERROR: when parsing line 10 column 29: extraneous input '.' expecting {'from', 'error', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier, NL}\n",
        "ERROR: when parsing line 23 column 33: extraneous input '.' expecting {'from', 'error', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier, NL}\n"
    ],
    "mismatched input '.' expecting {'{', 'is'}": [
        "ERROR: when parsing line 10 column 39: mismatched input '.' expecting {'{', 'is'}\n",
        "ERROR: when parsing line 23 column 40: mismatched input '.' expecting {'{', 'is'}\n"
    ],
    "extraneous input 'try' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 12 column 4: extraneous input 'try' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input 'print' expecting {';', NL}": [
        "ERROR: when parsing line 16 column 9: mismatched input 'print' expecting {';', NL}\n"
    ],
    "extraneous input 'Modification' expecting {';', NL}": [
        "ERROR: when parsing line 24 column 61: extraneous input 'Modification' expecting {';', NL}\n"
    ],
    "mismatched input '(' expecting {';', NL}": [
        "ERROR: when parsing line 26 column 13: mismatched input '(' expecting {';', NL}\n",
        "ERROR: when parsing line 26 column 85: mismatched input '(' expecting {';', NL}\n"
    ]
}