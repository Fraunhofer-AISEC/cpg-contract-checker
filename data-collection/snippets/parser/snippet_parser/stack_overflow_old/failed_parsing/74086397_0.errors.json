{
    "extraneous input 'GenerateNFT' expecting {'(', NL}": [
        "ERROR: when parsing line 3 column 13: extraneous input 'GenerateNFT' expecting {'(', NL}\n"
    ],
    "extraneous input 'ItemName' expecting {',', ')'}": [
        "ERROR: when parsing line 4 column 24: extraneous input 'ItemName' expecting {',', ')'}\n"
    ],
    "missing ')' at 'description'": [
        "ERROR: when parsing line 5 column 24: missing ')' at 'description'\n"
    ],
    "extraneous input ',' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 5 column 35: extraneous input ',' expecting {'=', ';', NL}\n"
    ],
    "mismatched input ')' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 7 column 4: mismatched input ')' expecting {'=', ';', NL}\n"
    ],
    "mismatched input '<EOF>' expecting {'~', 'from', '{', '}', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 8 column 0: mismatched input '<EOF>' expecting {'~', 'from', '{', '}', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}\n"
    ]
}