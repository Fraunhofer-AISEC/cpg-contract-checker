












function log10(int256 x) internal pure returns (int256 result) {
    require(x > 0);

    
    
    assembly {
        switch x
        case 1 { result := mul(SCALE, sub(0, 18)) }
        case 10 { result := mul(SCALE, sub(1, 18)) }
        case 100 { result := mul(SCALE, sub(2, 18)) }
        case 1000 { result := mul(SCALE, sub(3, 18)) }
        case 10000 { result := mul(SCALE, sub(4, 18)) }
        case 100000 { result := mul(SCALE, sub(5, 18)) }
        case 1000000 { result := mul(SCALE, sub(6, 18)) }
        case 10000000 { result := mul(SCALE, sub(7, 18)) }
        case 100000000 { result := mul(SCALE, sub(8, 18)) }
        case 1000000000 { result := mul(SCALE, sub(9, 18)) }
        case 10000000000 { result := mul(SCALE, sub(10, 18)) }
        case 100000000000 { result := mul(SCALE, sub(11, 18)) }
        case 1000000000000 { result := mul(SCALE, sub(12, 18)) }
        case 10000000000000 { result := mul(SCALE, sub(13, 18)) }
        case 100000000000000 { result := mul(SCALE, sub(14, 18)) }
        case 1000000000000000 { result := mul(SCALE, sub(15, 18)) }
        case 10000000000000000 { result := mul(SCALE, sub(16, 18)) }
        case 100000000000000000 { result := mul(SCALE, sub(17, 18)) }
        case 1000000000000000000 { result := 0 }
        case 10000000000000000000 { result := SCALE }
        case 100000000000000000000 { result := mul(SCALE, 2) }
        case 1000000000000000000000 { result := mul(SCALE, 3) }
        case 10000000000000000000000 { result := mul(SCALE, 4) }
        case 100000000000000000000000 { result := mul(SCALE, 5) }
        case 1000000000000000000000000 { result := mul(SCALE, 6) }
        case 10000000000000000000000000 { result := mul(SCALE, 7) }
        case 100000000000000000000000000 { result := mul(SCALE, 8) }
        case 1000000000000000000000000000 { result := mul(SCALE, 9) }
        case 10000000000000000000000000000 { result := mul(SCALE, 10) }
        case 100000000000000000000000000000 { result := mul(SCALE, 11) }
        case 1000000000000000000000000000000 { result := mul(SCALE, 12) }
        case 10000000000000000000000000000000 { result := mul(SCALE, 13) }
        case 100000000000000000000000000000000 { result := mul(SCALE, 14) }
        case 1000000000000000000000000000000000 { result := mul(SCALE, 15) }
        case 10000000000000000000000000000000000 { result := mul(SCALE, 16) }
        case 100000000000000000000000000000000000 { result := mul(SCALE, 17) }
        case 1000000000000000000000000000000000000 { result := mul(SCALE, 18) }
        case 10000000000000000000000000000000000000 { result := mul(SCALE, 19) }
        case 100000000000000000000000000000000000000 { result := mul(SCALE, 20) }
        case 1000000000000000000000000000000000000000 { result := mul(SCALE, 21) }
        case 10000000000000000000000000000000000000000 { result := mul(SCALE, 22) }
        case 100000000000000000000000000000000000000000 { result := mul(SCALE, 23) }
        case 1000000000000000000000000000000000000000000 { result := mul(SCALE, 24) }
        case 10000000000000000000000000000000000000000000 { result := mul(SCALE, 25) }
        case 100000000000000000000000000000000000000000000 { result := mul(SCALE, 26) }
        case 1000000000000000000000000000000000000000000000 { result := mul(SCALE, 27) }
        case 10000000000000000000000000000000000000000000000 { result := mul(SCALE, 28) }
        case 100000000000000000000000000000000000000000000000 { result := mul(SCALE, 29) }
        case 1000000000000000000000000000000000000000000000000 { result := mul(SCALE, 30) }
        case 10000000000000000000000000000000000000000000000000 { result := mul(SCALE, 31) }
        case 100000000000000000000000000000000000000000000000000 { result := mul(SCALE, 32) }
        case 1000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 33) }
        case 10000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 34) }
        case 100000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 35) }
        case 1000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 36) }
        case 10000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 37) }
        case 100000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 38) }
        case 1000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 39) }
        case 10000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 40) }
        case 100000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 41) }
        case 1000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 42) }
        case 10000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 43) }
        case 100000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 44) }
        case 1000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 45) }
        case 10000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 46) }
        case 100000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 47) }
        case 1000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 48) }
        case 10000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 49) }
        case 100000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 50) }
        case 1000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 51) }
        case 10000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 52) }
        case 100000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 53) }
        case 1000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 54) }
        case 10000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 55) }
        case 100000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 56) }
        case 1000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 57) }
        case 10000000000000000000000000000000000000000000000000000000000000000000000000000 { result := mul(SCALE, 58) }
        default {
            result := MAX_SD59x18
        }
    }

    if (result == MAX_SD59x18) {
        
        unchecked { result = (log2(x) * SCALE) / 332192809488736234; }
    }
}
