{
    "mismatched input 'function' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 6 column 13: mismatched input 'function' expecting {'=', ';', NL}\n"
    ],
    "mismatched input ':' expecting {'{', 'returns', ';', NL}": [
        "ERROR: when parsing line 6 column 47: mismatched input ':' expecting {'{', 'returns', ';', NL}\n"
    ],
    "extraneous input '{' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}": [
        "ERROR: when parsing line 6 column 78: extraneous input '{' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}\n"
    ],
    "no viable alternative at input '[\\nowner,'": [
        "ERROR: when parsing line 9 column 9: no viable alternative at input '[\\nowner,'\n"
    ],
    "no viable alternative at input 'owner,'": [
        "ERROR: when parsing line 9 column 9: no viable alternative at input 'owner,'\n"
    ]
}