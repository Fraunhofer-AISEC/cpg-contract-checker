{
    "mismatched input 'is' expecting ')'": [
        "ERROR: when parsing line 3 column 19: mismatched input 'is' expecting ')'\n"
    ],
    "mismatched input ')' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 3 column 32: mismatched input ')' expecting {'=', ';', NL}\n"
    ],
    "missing ')' at '{'": [
        "ERROR: when parsing line 5 column 35: missing ')' at '{'\n"
    ],
    "mismatched input '.' expecting {'~', 'from', '{', '}', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}": [
        "ERROR: when parsing line 5 column 37: mismatched input '.' expecting {'~', 'from', '{', '}', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}\n"
    ],
    "no viable alternative at input '(msg.senderis'": [
        "ERROR: when parsing line 10 column 23: no viable alternative at input '(msg.senderis'\n"
    ],
    "extraneous input ')' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 10 column 36: extraneous input ')' expecting {'=', ';', NL}\n"
    ]
}