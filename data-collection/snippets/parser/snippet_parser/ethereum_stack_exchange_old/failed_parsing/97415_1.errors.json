{
    "extraneous input 'enum' expecting {'from', 'error', 'function', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'receive', Identifier, NL}": [
        "ERROR: when parsing line 2 column 102: extraneous input 'enum' expecting {'from', 'error', 'function', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'receive', Identifier, NL}\n"
    ],
    "extraneous input '(' expecting {';', NL}": [
        "ERROR: when parsing line 7 column 30: extraneous input '(' expecting {';', NL}\n"
    ],
    "no viable alternative at input 'id:'": [
        "ERROR: when parsing line 9 column 10: no viable alternative at input 'id:'\n"
    ],
    "mismatched input ':' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 14 column 18: mismatched input ':' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 15 column 18: mismatched input ':' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'set' expecting {';', NL}": [
        "ERROR: when parsing line 20 column 8: mismatched input 'set' expecting {';', NL}\n"
    ],
    "extraneous input '}' expecting {';', NL}": [
        "ERROR: when parsing line 21 column 4: extraneous input '}' expecting {';', NL}\n"
    ],
    "extraneous input ')' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', '}', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'using', 'for', 'struct', 'modifier', 'function', 'event', 'enum', '[', 'address', 'mapping', 'calldata', 'if', 'else', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 22 column 4: extraneous input ')' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', '}', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'using', 'for', 'struct', 'modifier', 'function', 'event', 'enum', '[', 'address', 'mapping', 'calldata', 'if', 'else', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input 'to' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 8: mismatched input 'to' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'these' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 15: mismatched input 'these' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'i' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 25: mismatched input 'i' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'think' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 32: mismatched input 'think' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'is' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 43: mismatched input 'is' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'way' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 56: mismatched input 'way' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'do' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 24 column 63: mismatched input 'do' expecting {'=', ';', NL}\n"
    ],
    "no viable alternative at input 'it\\n}'": [
        "ERROR: when parsing line 25 column 0: no viable alternative at input 'it\\n}'\n"
    ]
}