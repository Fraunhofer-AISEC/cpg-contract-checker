{
    "missing ')' at '_owner'": [
        "ERROR: when parsing line 10 column 29: missing ')' at '_owner'\n"
    ],
    "mismatched input ',' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 10 column 35: mismatched input ',' expecting {'=', ';', NL}\n"
    ],
    "mismatched input ')' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 10 column 53: mismatched input ')' expecting {'=', ';', NL}\n"
    ],
    "extraneous input 'token' expecting {';', NL}": [
        "ERROR: when parsing line 10 column 89: extraneous input 'token' expecting {';', NL}\n",
        "ERROR: when parsing line 18 column 61: extraneous input 'token' expecting {';', NL}\n"
    ],
    "extraneous input '_to' expecting {',', ')'}": [
        "ERROR: when parsing line 18 column 18: extraneous input '_to' expecting {',', ')'}\n"
    ],
    "extraneous input '_value' expecting ')'": [
        "ERROR: when parsing line 18 column 31: extraneous input '_value' expecting ')'\n"
    ],
    "mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 18 column 39: mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "mismatched input '(' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 35 column 19: mismatched input '(' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "mismatched input 'public' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 35 column 62: mismatched input 'public' expecting {'=', ';', NL}\n"
    ],
    "extraneous input '{' expecting {';', NL}": [
        "ERROR: when parsing line 35 column 84: extraneous input '{' expecting {';', NL}\n"
    ]
}