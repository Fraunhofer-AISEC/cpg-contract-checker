{
    "extraneous input 'fulfillRandomness' expecting {'(', NL}": [
        "ERROR: when parsing line 38 column 13: extraneous input 'fulfillRandomness' expecting {'(', NL}\n"
    ],
    "extraneous input 'requestId' expecting {',', ')'}": [
        "ERROR: when parsing line 38 column 39: extraneous input 'requestId' expecting {',', ')'}\n"
    ],
    "extraneous input 'randomNumber' expecting ')'": [
        "ERROR: when parsing line 38 column 58: extraneous input 'randomNumber' expecting ')'\n"
    ],
    "mismatched input 'override' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 38 column 81: mismatched input 'override' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "extraneous input 'setTokenURI' expecting {'(', NL}": [
        "ERROR: when parsing line 50 column 13: extraneous input 'setTokenURI' expecting {'(', NL}\n"
    ],
    "extraneous input 'tokenId' expecting {',', ')'}": [
        "ERROR: when parsing line 50 column 33: extraneous input 'tokenId' expecting {',', ')'}\n"
    ],
    "extraneous input '_tokenURI' expecting ')'": [
        "ERROR: when parsing line 50 column 56: extraneous input '_tokenURI' expecting ')'\n"
    ],
    "mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 50 column 67: mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "extraneous input 'returns' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', '}', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'using', 'for', 'struct', 'modifier', 'function', 'event', 'enum', '[', 'address', 'mapping', 'calldata', 'if', 'else', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment, NL}": [
        "ERROR: when parsing line 51 column 8: extraneous input 'returns' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', '}', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'using', 'for', 'struct', 'modifier', 'function', 'event', 'enum', '[', 'address', 'mapping', 'calldata', 'if', 'else', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment, NL}\n"
    ],
    "extraneous input ',' expecting {';', NL}": [
        "ERROR: when parsing line 52 column 53: extraneous input ',' expecting {';', NL}\n"
    ],
    "extraneous input ')' expecting {';', NL}": [
        "ERROR: when parsing line 54 column 8: extraneous input ')' expecting {';', NL}\n"
    ]
}