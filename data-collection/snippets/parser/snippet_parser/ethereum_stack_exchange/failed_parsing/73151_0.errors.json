{
    "no viable alternative at input 'functionWithdrawDividend(address)public{\\n\\nif(!_RestrictedFromDividend[address(msg.sender)]){\\n_SavedDividend[msg.sender]=_balances[address(this)].mul(_balances[address(msg.sender)]).div(100000000);\\nuint256DividendsToBurn=_SavedDividend[msg.sender].mul(10).div(10000);\\nuint256DividendstoDividend=_SavedDividend[msg.sender].sub(DividendsToBurn);\\n\\n_balances[address(this)]=_balances[address(this)].sub(DividendstoDividend).sub(DividendsToBurn);\\n_balances[msg.sender]=_balances[msg.sender].add(DividendstoDividend);\\n_balances[address(0)]=_balances[address(0)].add(DividendsToBurn);\\n\\n_totalSupply=_totalSupply.sub(DividendsToBurn);\\n_RestrictedFromDividend[address(msg.sender)]=true;\\nClaimTime[address(msg.sender)]=now;\\n\\nemitTransfer(address(this),msg.sender,DividendstoDividend);\\nemitTransfer(address(this),address(0),DividendsToBurn);\\n\\n}\\nelse{\\nemitTransfer(address(this),msg.sender,0);\\n}\\n'": [
        "ERROR: when parsing line 23 column 0: no viable alternative at input 'functionWithdrawDividend(address)public{\\n\\nif(!_RestrictedFromDividend[address(msg.sender)]){\\n_SavedDividend[msg.sender]=_balances[address(this)].mul(_balances[address(msg.sender)]).div(100000000);\\nuint256DividendsToBurn=_SavedDividend[msg.sender].mul(10).div(10000);\\nuint256DividendstoDividend=_SavedDividend[msg.sender].sub(DividendsToBurn);\\n\\n_balances[address(this)]=_balances[address(this)].sub(DividendstoDividend).sub(DividendsToBurn);\\n_balances[msg.sender]=_balances[msg.sender].add(DividendstoDividend);\\n_balances[address(0)]=_balances[address(0)].add(DividendsToBurn);\\n\\n_totalSupply=_totalSupply.sub(DividendsToBurn);\\n_RestrictedFromDividend[address(msg.sender)]=true;\\nClaimTime[address(msg.sender)]=now;\\n\\nemitTransfer(address(this),msg.sender,DividendstoDividend);\\nemitTransfer(address(this),address(0),DividendsToBurn);\\n\\n}\\nelse{\\nemitTransfer(address(this),msg.sender,0);\\n}\\n'\n"
    ]
}