{
    "no viable alternative at input 'functiondistributePrizes(uint16teamWinner)publiconlyAgent{\\nrequire(bettingActive==false);\\naddress[1000]memorywinners;\\naddress[1000]memorydraw;\\n\\n\\nuint256count=0;\\nuint256LoserBet=0;\\nuint256WinnerBet=0;\\n\\n\\nfor(uint256i=0;i<players.length;i++){\\naddressplayerAddress=players[i];\\n\\n\\n\\nif(playerInfo[playerAddress].teamSelected==teamWinner){\\nwinners[count]=playerAddress;\\ncount++;\\n}\\n}\\n\\n\\n\\nif(teamWinner==1){\\nLoserBet=totalBetsTwo;\\nWinnerBet=totalBetsOne;\\n\\nfor(uint256j=0;j<count;j++){\\n\\nif(winners[j]!=address(0))\\nadd=winners[j];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(winners[j],(bets*(10000+(LoserBet*devFee/WinnerBet)))/10000);\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n\\n}\\nelseif(teamWinner==2){\\nLoserBet=totalBetsOne;\\nWinnerBet=totalBetsTwo;\\n\\nfor(uint256k=0;k<count;k++){\\n\\nif(winners[k]!=address(0))\\nadd=winners[k];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(winners[k],(bets*(10000+(LoserBet*devFee/WinnerBet)))/10000);\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n}\\nelseif(teamWinner==3){\\n\\nuint256num;\\nfor(uint256l=0;l<players.length;l++){\\naddressaP=players[l];\\n\\nif(playerInfo[aP].teamSelected==1||playerInfo[aP].teamSelected==2){\\ndraw[num]=aP;\\nnum++;\\n}\\n}\\n\\nfor(uint256m=0;m<num;m++){\\n\\nif(draw[m]!=address(0))\\nadd=draw[m];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(draw[m],(bets*(devFee/10000)));\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n}\\n'": [
        "ERROR: when parsing line 101 column 0: no viable alternative at input 'functiondistributePrizes(uint16teamWinner)publiconlyAgent{\\nrequire(bettingActive==false);\\naddress[1000]memorywinners;\\naddress[1000]memorydraw;\\n\\n\\nuint256count=0;\\nuint256LoserBet=0;\\nuint256WinnerBet=0;\\n\\n\\nfor(uint256i=0;i<players.length;i++){\\naddressplayerAddress=players[i];\\n\\n\\n\\nif(playerInfo[playerAddress].teamSelected==teamWinner){\\nwinners[count]=playerAddress;\\ncount++;\\n}\\n}\\n\\n\\n\\nif(teamWinner==1){\\nLoserBet=totalBetsTwo;\\nWinnerBet=totalBetsOne;\\n\\nfor(uint256j=0;j<count;j++){\\n\\nif(winners[j]!=address(0))\\nadd=winners[j];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(winners[j],(bets*(10000+(LoserBet*devFee/WinnerBet)))/10000);\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n\\n}\\nelseif(teamWinner==2){\\nLoserBet=totalBetsOne;\\nWinnerBet=totalBetsTwo;\\n\\nfor(uint256k=0;k<count;k++){\\n\\nif(winners[k]!=address(0))\\nadd=winners[k];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(winners[k],(bets*(10000+(LoserBet*devFee/WinnerBet)))/10000);\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n}\\nelseif(teamWinner==3){\\n\\nuint256num;\\nfor(uint256l=0;l<players.length;l++){\\naddressaP=players[l];\\n\\nif(playerInfo[aP].teamSelected==1||playerInfo[aP].teamSelected==2){\\ndraw[num]=aP;\\nnum++;\\n}\\n}\\n\\nfor(uint256m=0;m<num;m++){\\n\\nif(draw[m]!=address(0))\\nadd=draw[m];\\nbets=playerInfo[add].amountBet;\\n\\ntoken.transfer(draw[m],(bets*(devFee/10000)));\\n\\n}\\ndeleteplayerInfo[playerAddress];\\nplayers.length=0;\\nLoserBet=0;\\nWinnerBet=0;\\ntotalBetsOne=0;\\ntotalBetsTwo=0;\\ntotalBetsDraw=0;\\n\\n}\\n'\n"
    ]
}