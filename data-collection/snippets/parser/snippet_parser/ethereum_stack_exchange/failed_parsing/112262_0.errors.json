{
    "extraneous input '.' expecting {<EOF>, 'pragma', 'import', 'from', '}', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier, NL}": [
        "ERROR: when parsing line 2 column 0: extraneous input '.' expecting {<EOF>, 'pragma', 'import', 'from', '}', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier, NL}\n",
        "ERROR: when parsing line 3 column 0: extraneous input '.' expecting {<EOF>, 'pragma', 'import', 'from', '}', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier, NL}\n",
        "ERROR: when parsing line 4 column 0: extraneous input '.' expecting {<EOF>, 'pragma', 'import', 'from', '}', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier, NL}\n"
    ],
    "mismatched input 'i' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 9 column 9: mismatched input 'i' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'for' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 9 column 15: mismatched input 'for' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'I' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 11 column 4: mismatched input 'I' expecting {'=', ';', NL}\n"
    ],
    "mismatched input '3' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 11 column 11: mismatched input '3' expecting {'=', ';', NL}\n"
    ]
}