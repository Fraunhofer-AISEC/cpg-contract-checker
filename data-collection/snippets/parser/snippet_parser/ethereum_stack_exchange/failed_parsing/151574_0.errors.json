{
    "mismatched input 'getPrice' expecting {'(', NL}": [
        "ERROR: when parsing line 17 column 23: mismatched input 'getPrice' expecting {'(', NL}\n"
    ],
    "mismatched input 'public' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 17 column 32: mismatched input 'public' expecting {'=', ';', NL}\n"
    ],
    "extraneous input 'getConversionRate' expecting {'(', NL}": [
        "ERROR: when parsing line 23 column 23: extraneous input 'getConversionRate' expecting {'(', NL}\n"
    ],
    "mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 23 column 43: mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n",
        "ERROR: when parsing line 26 column 36: mismatched input 'public' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "extraneous input 'getVersion' expecting {'(', NL}": [
        "ERROR: when parsing line 26 column 23: extraneous input 'getVersion' expecting {'(', NL}\n"
    ],
    "extraneous input '{' expecting {';', NL}": [
        "ERROR: when parsing line 26 column 64: extraneous input '{' expecting {';', NL}\n"
    ],
    "extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'from', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier}": [
        "ERROR: when parsing line 33 column 4: extraneous input '}' expecting {<EOF>, 'pragma', 'import', 'from', 'abstract', 'contract', 'interface', 'library', 'error', 'using', 'struct', 'modifier', 'function', 'event', 'enum', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', 'callback', Int, Uint, Byte, Fixed, Ufixed, 'leave', 'payable', 'constructor', 'fallback', 'receive', Identifier}\n"
    ]
}