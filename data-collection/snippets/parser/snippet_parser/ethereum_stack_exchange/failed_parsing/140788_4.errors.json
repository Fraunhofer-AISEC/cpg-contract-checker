{
    "mismatched input 'it' expecting {';', NL}": [
        "ERROR: when parsing line 3 column 0: mismatched input 'it' expecting {';', NL}\n"
    ],
    "mismatched input '(' expecting {';', NL}": [
        "ERROR: when parsing line 3 column 2: mismatched input '(' expecting {';', NL}\n",
        "ERROR: when parsing line 6 column 28: mismatched input '(' expecting {';', NL}\n",
        "ERROR: when parsing line 14 column 26: mismatched input '(' expecting {';', NL}\n"
    ],
    "mismatched input 'function' expecting ')'": [
        "ERROR: when parsing line 3 column 57: mismatched input 'function' expecting ')'\n"
    ],
    "mismatched input '{' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}": [
        "ERROR: when parsing line 3 column 69: mismatched input '{' expecting {'from', 'error', 'memory', 'storage', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier}\n"
    ],
    "extraneous input '=>' expecting {';', NL}": [
        "ERROR: when parsing line 6 column 36: extraneous input '=>' expecting {';', NL}\n"
    ],
    "extraneous input ')' expecting {';', NL}": [
        "ERROR: when parsing line 8 column 24: extraneous input ')' expecting {';', NL}\n"
    ],
    "mismatched input '.' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 9 column 33: mismatched input '.' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 10 column 33: mismatched input '.' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 11 column 33: mismatched input '.' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 13 column 28: mismatched input '.' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'mouseGame' expecting {';', NL}": [
        "ERROR: when parsing line 12 column 37: mismatched input 'mouseGame' expecting {';', NL}\n"
    ],
    "mismatched input '.' expecting ')'": [
        "ERROR: when parsing line 14 column 41: mismatched input '.' expecting ')'\n"
    ],
    "mismatched input ')' expecting {';', NL}": [
        "ERROR: when parsing line 14 column 52: mismatched input ')' expecting {';', NL}\n"
    ],
    "extraneous input ')' expecting {<EOF>, '~', 'from', '{', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 15 column 17: extraneous input ')' expecting {<EOF>, '~', 'from', '{', '(', 'error', 'for', 'function', '[', 'address', 'mapping', 'calldata', 'if', 'try', 'while', 'unchecked', 'assembly', 'do', 'return', 'throw', 'emit', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'break', 'continue', 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment}\n"
    ]
}