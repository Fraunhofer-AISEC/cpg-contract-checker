{
    "extraneous input '**' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 53 column 0: extraneous input '**' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "extraneous input '**' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 53 column 17: extraneous input '**' expecting {'=', ';', NL}\n"
    ],
    "extraneous input '>' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 55 column 0: extraneous input '>' expecting {<EOF>, 'pragma', '~', 'import', 'from', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input 'supplyChain' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 55 column 14: mismatched input 'supplyChain' expecting {'=', ';', NL}\n"
    ],
    "mismatched input ':' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 55 column 43: mismatched input ':' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 55 column 53: mismatched input ':' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'transaction' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 56 column 12: mismatched input 'transaction' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'been' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 56 column 28: mismatched input 'been' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'to' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 56 column 42: mismatched input 'to' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'initial' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 56 column 49: mismatched input 'initial' expecting {'=', ';', NL}\n"
    ],
    "extraneous input '.' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 56 column 62: extraneous input '.' expecting {'=', ';', NL}\n"
    ],
    "no viable alternative at input 'Note:'": [
        "ERROR: when parsing line 57 column 4: no viable alternative at input 'Note:'\n"
    ]
}