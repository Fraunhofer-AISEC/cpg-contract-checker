{
    "no viable alternative at input 'functionpancakeCall(address_sender,uint256_amount0,uint256_amount1,bytescalldata_data)external{\\n\\n\\naddresstoken0=IUniswapV2Pair(msg.sender).token0();\\naddresstoken1=IUniswapV2Pair(msg.sender).token1();\\naddresspair=IUniswapV2Factory(PANCAKE_FACTORY).getPair(token0,token1);\\n\\nrequire(msg.sender==pair,\"The sender needs to match the pair\");\\nrequire(_sender==address(this),\"Sender should match this contract\");\\n\\n(addressstarterToken,addresstokenLink1,addresstokenLink2,uint256amount,addressmyAddress)=abi.decode(_data,(address,address,address,uint256,address));\\n\\n\\nuint256fee=((amount*3)/997)+1;\\nuint256amountToRepay=amount+fee;\\n\\nuint256loanAmount=_amount0>0?_amount0:_amount1;\\n\\nuint256trade1AcquiredCoin=placeTrade(starterToken,tokenLink1,loanAmount);\\n'": [
        "ERROR: when parsing line 20 column 0: no viable alternative at input 'functionpancakeCall(address_sender,uint256_amount0,uint256_amount1,bytescalldata_data)external{\\n\\n\\naddresstoken0=IUniswapV2Pair(msg.sender).token0();\\naddresstoken1=IUniswapV2Pair(msg.sender).token1();\\naddresspair=IUniswapV2Factory(PANCAKE_FACTORY).getPair(token0,token1);\\n\\nrequire(msg.sender==pair,\"The sender needs to match the pair\");\\nrequire(_sender==address(this),\"Sender should match this contract\");\\n\\n(addressstarterToken,addresstokenLink1,addresstokenLink2,uint256amount,addressmyAddress)=abi.decode(_data,(address,address,address,uint256,address));\\n\\n\\nuint256fee=((amount*3)/997)+1;\\nuint256amountToRepay=amount+fee;\\n\\nuint256loanAmount=_amount0>0?_amount0:_amount1;\\n\\nuint256trade1AcquiredCoin=placeTrade(starterToken,tokenLink1,loanAmount);\\n'\n"
    ]
}