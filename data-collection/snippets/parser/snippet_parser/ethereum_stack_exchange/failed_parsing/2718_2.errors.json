{
    "mismatched input 'test' expecting {';', NL}": [
        "ERROR: when parsing line 2 column 2: mismatched input 'test' expecting {';', NL}\n"
    ],
    "extraneous input 'mappings' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 2 column 14: extraneous input 'mappings' expecting {'=', ';', NL}\n",
        "ERROR: when parsing line 3 column 20: extraneous input 'mappings' expecting {'=', ';', NL}\n"
    ],
    "no viable alternative at input 'LOG:'": [
        "ERROR: when parsing line 3 column 5: no viable alternative at input 'LOG:'\n",
        "ERROR: when parsing line 4 column 5: no viable alternative at input 'LOG:'\n",
        "ERROR: when parsing line 9 column 5: no viable alternative at input 'LOG:'\n"
    ],
    "mismatched input 'LOG' expecting {';', NL}": [
        "ERROR: when parsing line 5 column 2: mismatched input 'LOG' expecting {';', NL}\n",
        "ERROR: when parsing line 7 column 2: mismatched input 'LOG' expecting {';', NL}\n"
    ],
    "mismatched input 'LOG' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 8 column 2: mismatched input 'LOG' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'to' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 8 column 25: mismatched input 'to' expecting {'=', ';', NL}\n"
    ],
    "extraneous input 'entry' expecting {'=', ';', NL}": [
        "ERROR: when parsing line 8 column 33: extraneous input 'entry' expecting {'=', ';', NL}\n"
    ],
    "mismatched input 'Passed' expecting {';', NL}": [
        "ERROR: when parsing line 10 column 2: mismatched input 'Passed' expecting {';', NL}\n"
    ],
    "extraneous input '<EOF>' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}": [
        "ERROR: when parsing line 11 column 0: extraneous input '<EOF>' expecting {'~', 'from', '(', 'error', '[', 'address', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'receive', Identifier, StringLiteralFragment, NL}\n"
    ]
}