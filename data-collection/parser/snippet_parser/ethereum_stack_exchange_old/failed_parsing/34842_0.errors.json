{
    "mismatched input 'using' expecting {'{', ','}": [
        "ERROR: when parsing line 1 column 17: mismatched input 'using' expecting {'{', ','}\n"
    ],
    "extraneous input 'using' expecting {'from', 'error', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier, NL}": [
        "ERROR: when parsing line 2 column 17: extraneous input 'using' expecting {'from', 'error', 'calldata', 'revert', 'callback', 'leave', 'payable', 'constructor', 'receive', Identifier, NL}\n"
    ],
    "extraneous input '\\n' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', ',', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}": [
        "ERROR: when parsing line 2 column 26: extraneous input '\\n' expecting {<EOF>, 'pragma', '~', 'import', 'from', '{', ',', 'abstract', 'contract', 'interface', 'library', '(', 'error', 'struct', 'function', 'enum', '[', 'address', 'mapping', 'calldata', 'revert', 'var', 'bool', 'string', 'byte', '++', '--', 'new', '+', '-', 'after', 'delete', '!', 'callback', Int, Uint, Byte, Fixed, Ufixed, BooleanLiteral, DecimalNumber, HexNumber, HexLiteralFragment, 'leave', 'payable', 'type', 'constructor', 'fallback', 'receive', Identifier, StringLiteralFragment}\n"
    ],
    "mismatched input ';' expecting {'{', ','}": [
        "ERROR: when parsing line 3 column 15: mismatched input ';' expecting {'{', ','}\n"
    ],
    "mismatched input 'using' expecting {'{', 'is'}": [
        "ERROR: when parsing line 4 column 11: mismatched input 'using' expecting {'{', 'is'}\n"
    ]
}