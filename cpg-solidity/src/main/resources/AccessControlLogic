match p=(entry:FunctionDeclaration)-[e:EOG|INVOKES|RETURNS*]->(writingNode)-[:EOG|INVOKES*]->(last)
where not 'ConstructorDeclaration' in labels(entry) and not exists((last)-[:EOG|INVOKES]->())
    and exists((writingNode)-[:DFG]->(:FieldDeclaration)<-[:REFERS_TO]-()<-[:LHS|RHS]-(:BinaryOperator {operatorCode: '=='})-[:LHS|RHS]->({code: 'msg.sender'}))
    and not exists{
   ({code : 'msg.sender'})-[:DFG*]->(n)<-[:DFG*]-(:FieldDeclaration)
   where n in nodes(p)
   and exists{
   alt=(n)-[:EOG|INVOKES*]->(t) where 'Rollback' in labels(t) or not writingNode in nodes(alt)
   }
}
return distinct entry as write, entry.startLine as sline, entry.endLine as eline, entry.startColumn as scol, entry.endColumn as ecol, entry.artifact as file